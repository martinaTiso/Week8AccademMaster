// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Week8AccademMaster.RepositoryEF;

#nullable disable

namespace Week8AccademMaster.RepositoryEF.Migrations
{
    [DbContext(typeof(MasterContext))]
    [Migration("20220118163718_prima")]
    partial class prima
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Week8AccademMaster.Core.Entities.Corso", b =>
                {
                    b.Property<string>("CodiceCorso")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodiceCorso");

                    b.ToTable("Corso", (string)null);
                });

            modelBuilder.Entity("Week8AccademMaster.Core.Entities.Docente", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Docente", (string)null);
                });

            modelBuilder.Entity("Week8AccademMaster.Core.Entities.Lezione", b =>
                {
                    b.Property<int>("LezioneID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LezioneID"), 1L, 1);

                    b.Property<string>("Aula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorsoCodice")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DocenteID")
                        .HasColumnType("int");

                    b.Property<int>("Durata")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrarioInizio")
                        .HasColumnType("datetime2");

                    b.HasKey("LezioneID");

                    b.HasIndex("CorsoCodice");

                    b.HasIndex("DocenteID");

                    b.ToTable("Lezione", (string)null);
                });

            modelBuilder.Entity("Week8AccademMaster.Core.Entities.Studente", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorsoCodice")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DataNascita")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitoloStudio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CorsoCodice");

                    b.ToTable("Studente", (string)null);
                });

            modelBuilder.Entity("Week8AccademMaster.Core.Entities.Lezione", b =>
                {
                    b.HasOne("Week8AccademMaster.Core.Entities.Corso", "Corso")
                        .WithMany("Lezioni")
                        .HasForeignKey("CorsoCodice")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Week8AccademMaster.Core.Entities.Docente", "Docente")
                        .WithMany("Lezioni")
                        .HasForeignKey("DocenteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Corso");

                    b.Navigation("Docente");
                });

            modelBuilder.Entity("Week8AccademMaster.Core.Entities.Studente", b =>
                {
                    b.HasOne("Week8AccademMaster.Core.Entities.Corso", "Corso")
                        .WithMany("Studenti")
                        .HasForeignKey("CorsoCodice")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Corso");
                });

            modelBuilder.Entity("Week8AccademMaster.Core.Entities.Corso", b =>
                {
                    b.Navigation("Lezioni");

                    b.Navigation("Studenti");
                });

            modelBuilder.Entity("Week8AccademMaster.Core.Entities.Docente", b =>
                {
                    b.Navigation("Lezioni");
                });
#pragma warning restore 612, 618
        }
    }
}
